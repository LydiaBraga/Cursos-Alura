{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","requestStore","transaction","objectStore","add","onsuccess","event","onerror","console","log","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEKC,a;AAET,uCAAYC,UAAZ,EAAwB;AAAA;;AACpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAEQC,U,EAAY;AAAA;;AACjB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,eAAe,MAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,MAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACdO,WADc,CACF,MAAKP,MADH,EAEdQ,GAFc,CAEVP,UAFU,CAAnB;;AAIAI,yCAAaI,SAAb,GAAyB,UAACC,KAAD,EAAW;AAChCP;AACH,6BAFD;;AAIAE,yCAAaM,OAAb,GAAuB,UAACD,KAAD,EAAW;AAC9BE,wCAAQC,GAAR,CAAYH,MAAMI,MAAN,CAAaC,KAAzB;AACAX,uCAAO,wCAAP;AACH,6BAHD;AAIH,yBAbM,CAAP;AAcH;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIY,SAAS,OAAKjB,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACRO,WADQ,CACI,OAAKP,MADT,EAERiB,UAFQ,EAAb;AAGA,gCAAIC,cAAc,EAAlB;;AAEAF,mCAAOP,SAAP,GAAmB,UAACC,KAAD,EAAW;AAC1B,oCAAIS,QAAQT,MAAMI,MAAN,CAAaM,MAAzB;;AAEA,oCAAID,KAAJ,EAAW;AACP,wCAAIE,OAAOF,MAAMG,KAAjB;AACAJ,gDAAYK,IAAZ,CAAiB,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;AACAP,0CAAMQ,QAAN;AACH,iCAJD,MAIO;AACHxB,4CAAQe,WAAR;AACH;AACJ,6BAVD;;AAYAF,mCAAOL,OAAP,GAAiB,UAACD,KAAD,EAAW;AACxBE,wCAAQC,GAAR,CAAYH,MAAMI,MAAN,CAAaC,KAAzB;AACAX,uCAAO,yCAAP;AACH,6BAHD;AAIH,yBAtBM,CAAP;AAuBH;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,eAAe,OAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACdO,WADc,CACF,OAAKP,MADH,EAEd4B,KAFc,EAAnB;;AAIAvB,yCAAaI,SAAb,GAAyB,UAACC,KAAD,EAAW;AAChCP,wCAAQ,oCAAR;AACH,6BAFD;;AAIAE,yCAAaM,OAAb,GAAuB,UAACD,KAAD,EAAW;AAC9BE,wCAAQC,GAAR,CAAYH,MAAMI,MAAN,CAAaC,KAAzB;AACAX,uCAAO,yCAAP;AACH,6BAHD;AAIH,yBAbM,CAAP;AAcH","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from \"../models/Negociacao\";\r\n\r\nexport class NegociacaoDao {\r\n\r\n    constructor(connection) {\r\n        this._connection = connection;\r\n        this._store = \"negociacoes\";\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n        return new Promise((resolve, reject) => {\r\n            let requestStore = this._connection.transaction([this._store], \"readwrite\")\r\n                .objectStore(this._store)\r\n                .add(negociacao);\r\n\r\n            requestStore.onsuccess = (event) => {\r\n                resolve();\r\n            };\r\n\r\n            requestStore.onerror = (event) => {\r\n                console.log(event.target.error);\r\n                reject(\"Não foi possível incluir a negociação.\");\r\n            };\r\n        });\r\n    }\r\n\r\n    listaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._connection.transaction([this._store], \"readwrite\")\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = (event) => {\r\n                let atual = event.target.result;\r\n\r\n                if (atual) {\r\n                    let dado = atual.value;\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n                    atual.continue();\r\n                } else {\r\n                    resolve(negociacoes);\r\n                }\r\n            };\r\n\r\n            cursor.onerror = (event) => {\r\n                console.log(event.target.error);\r\n                reject(\"Não foi possível listar as negociações!\");\r\n            };\r\n        });\r\n    }\r\n\r\n    apagaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n            let requestStore = this._connection.transaction([this._store], \"readwrite\")\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n            requestStore.onsuccess = (event) => {\r\n                resolve(\"Negociações removidas com sucesso!\");\r\n            };\r\n\r\n            requestStore.onerror = (event) => {\r\n                console.log(event.target.error);\r\n                reject(\"Não foi possível remover as negociação.\");\r\n            };\r\n        });\r\n    }\r\n}"]}